{
  "name": "Asistente IA Cafetería SaboreaYa",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "=Datos del cliente:\n\nNombre: {{ $json.data[0][\"message.from.first_name\"] }}\nMensaje: {{ $json.data[0]['message.text'] }}\nID: {{ $json.data[0]['message.chat.id'] }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=# Identidad:\nEres un asistente virtual de atencion al cliente de la cafetería SaboreaYa que se dedica a ofrecer servicios de entrega de alimentos a domicilio mediante plataformas digitales y canales especializados.\n\n# Objetivo:\n\nTu objetivo principal consiste en atender y resolver con precisión y amabilidad las consultas de los usuarios interesados en los servicios de La Cafetería SaboreaYa, brindando información clara, atractiva y útil que los motive a convertirse en clientes satisfechos.\n\nTienes la capacidad de comunicarte con los usuarios de manera respetuosa, profesional y empática, manteniendo siempre el foco en tu objetivo principal. Debes presentar de forma proactiva las ofertas de alimentos disponibles en la herramienta \"ProductoEnVenta\", alineándolas con las preferencias y solicitudes expresadas por el cliente.\n\nPara realizar una compra solicita al cliente la siguiente informacion: nombre y apellidos, número de teléfono, dirección del domicilio y una lista de los productos (solo pide esto si no te lo ha dicho antes).\n\nCuando obtengas toda la información del cliente procede a verificar si hay disponibilidad de productos usando la herramienta \"ProductoEnVenta\". \n\nUna vez verifiques que existe disponibilidad de los productos demandados por el cliente procedes a hacer una factura con la lista de productos y el precio para que el cliente confirme.\n\nDe inmediato el cliente confirme la compra debes notificar \"Orden confirmada\".\n\nCuando la \"orden\" o \"pago\" o \"pedido\" o \"compra\" este confirmado por el cliente, debes preguntar si va a efectuar el pago en efectivo o por tarjeta. Si el pago es en efectivo se realiza cuando se le lleva la orden a la direcion porporcionada, si el pago es por tarjeta se dice \"No contamos aun con medio de pago electrónico\" educadamente y profesionalmente.\n\n# Herramientas:\n\n* \"ProductoEnVenta\": Usa esta herramienta para obtener información de los productos y alimentos que ofrece la cafeteria SaboreaYa.\n\n* \"Calculator\": utilizar esta herramienta cuando necesite hacer operaciones matematicas complejas.\n\n* \"Think\": utiliza esta herramienta para analizar que accion realizar y para mejorar tu respuesta.\n\n# Comportamiento:\n\n* Usa un tono profesional y alegre.\n\n* Nunca corrijas a los usuarios. Limítate a responder sus consultas.\n\n* Antes de solicitar información al cliente, consulta tu MEMORY para verificar si ya la tienes.\n\n* Cuando la cosulta no tenga nada que ver con tu cometido limítate a responder respetuosamente que no tienes autorización.\n\n# Recordatorio:\n\n* Utiliza siempre tu MEMORY para mantener el hilo de la conversacion. Es muy importante que cuando le pidas datos al usuario para realizar una compra, consultes tu MEMORY para no pedirle datos repetidos.\n\n* Fecha y hora actual: {{ $now }}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -192,
        -16
      ],
      "id": "d3dee4a8-ee14-4563-88b4-ae156b0e1664",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.from.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -304,
        272
      ],
      "id": "e886e7ac-478f-4f5b-a8e5-cb0796bd01da",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -832,
        -16
      ],
      "id": "2b6af7b6-0ac7-4ae8-8db5-5c990a631c1e",
      "name": "Telegram Trigger",
      "webhookId": "482a3b7f-8fc6-42eb-b89d-972c09abac5b",
      "credentials": {
        "telegramApi": {
          "id": "6X64zyNRsZDFPZTx",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -416,
        -16
      ],
      "id": "c90bd08d-9c86-40ce-b52e-8dd3ba0397ca",
      "name": "Aggregate"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        -160,
        272
      ],
      "id": "2a8a0ac4-f72b-4d70-8e50-dc33c6c5b196",
      "name": "Calculator"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1.1,
      "position": [
        0,
        272
      ],
      "id": "8f86b9a7-69f5-421d-82bc-7625784a37f2",
      "name": "Think"
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "Get row(s) in sheet in Google Sheets",
        "documentId": {
          "__rl": true,
          "value": "1t0-OHxvI_qpU3AKISl4YHux3WVZAISgRzkQbKC5NPdc",
          "mode": "list",
          "cachedResultName": "Productos_En_Venta",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t0-OHxvI_qpU3AKISl4YHux3WVZAISgRzkQbKC5NPdc/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Hoja 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1t0-OHxvI_qpU3AKISl4YHux3WVZAISgRzkQbKC5NPdc/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheetsTool",
      "typeVersion": 4.7,
      "position": [
        176,
        272
      ],
      "id": "36228171-1a39-4160-a89b-9480b9fe54d5",
      "name": "ProductoEnVenta",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "qhgTq7wGjLpmZjU8",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.first().json.output;\n\n// Verificamos que sea un string\nconst text = typeof input === 'string' ? input : String(input);\n\n// Función compacta para escapar caracteres MarkdownV2\nconst escapeMarkdown = t => t.replace(/[_*[\\]()~`>#+\\-=|{}.!]/g, m => '\\\\' + m);\n\nconst escapedText = escapeMarkdown(text);\n\nreturn { escapedText };\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        256,
        -16
      ],
      "id": "1ff918b7-752d-450b-bf4c-2ca956cc52d0",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {
          "temperature": 0.5
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -448,
        272
      ],
      "id": "2c2e1f83-3b3e-4856-8570-07446378b234",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "8ktyhGAVgesidRv0",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Aggregate').item.json.data[0][\"message.chat.id\"] }}",
        "text": "={{ $json.escapedText }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "MarkdownV2"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        528,
        -16
      ],
      "id": "40ecbab5-ff36-4c60-90d0-93ef7dc7d4fc",
      "name": "Send a text message to client",
      "webhookId": "adfb1f0d-dfba-478f-ac56-7235d3d6880d",
      "credentials": {
        "telegramApi": {
          "id": "6X64zyNRsZDFPZTx",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "chatId": "1219550265",
        "message": "={{ $json.texto_a_enviar }}\n{{ $('Telegram Trigger').item.json.message.from.username }}",
        "approvalOptions": {
          "values": {
            "approvalType": "double",
            "approveLabel": "✅ Aprobar venta",
            "disapproveLabel": "❌ Cancelar venta"
          }
        },
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1728,
        -432
      ],
      "id": "c13687c6-c7b7-4ae6-9c36-d3157cd97567",
      "name": "Send a text message",
      "webhookId": "7f5ee934-c165-4be0-900c-4b54c06a6d94",
      "credentials": {
        "telegramApi": {
          "id": "6X64zyNRsZDFPZTx",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "message.from.first_name",
        "include": "selectedOtherFields",
        "fieldsToInclude": "=message.text, message.chat.id",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -624,
        -16
      ],
      "id": "7a085225-9147-4107-8a50-b306bde2b5ee",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output }}",
        "messages": {
          "messageValues": [
            {
              "message": "=Analiza cuidadosamente el siguiente mensaje escrito por un cliente:\n\nSi el contenido indica de forma clara y explícita que el cliente ha confirmado la compra a pagar en efectivo, responde únicamente con el texto: \"pago en efectivo\".\n\nSi el contenido indica de forma clara y explícita que el cliente va a pagar en por medio de pago electronico, responde únicamente con el texto: \"pago electronico\".\n\n\nSi no hay evidencia suficiente de confirmación de pago, responde únicamente con el texto: \"no hay pago confirmado\"."
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        512,
        -416
      ],
      "id": "2acd7773-045e-48fb-9b46-fa26f3132284",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {
          "temperature": 0.4
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        512,
        -240
      ],
      "id": "7e2b099b-92d3-44de-a6fc-0fac6b7b1100",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "8ktyhGAVgesidRv0",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $input.first().json.metododepago;\nconst cliente = $('Telegram Trigger').first().json.message.from.username;\n\n// Aseguramos que sea un string\nconst text = typeof input === 'string' ? input : String(input);\n\n// Función para escapar caracteres especiales en MarkdownV2\nconst escapeMarkdown = t => t.replace(/[_*[\\]()~`>#+\\-=|{}.!]/g, m => '\\\\' + m);\n\nconst escapedText = escapeMarkdown(text);\nlet texto_a_enviar = \"\";\n\n// Normalizamos el texto para evitar problemas con mayúsculas/minúsculas\nconst normalizedText = escapedText.toLowerCase();\n\nif (normalizedText === \"pago en efectivo\") {\n  texto_a_enviar = `El cliente ${cliente} va a realizar el pago en efectivo`;\n} else if (normalizedText === \"pago electronico\") {\n  texto_a_enviar = `El cliente ${cliente} va a realizar el pago electrónico`;\n} else {\n  texto_a_enviar = \"El método de pago no reconocido\";\n}\n\nreturn { texto_a_enviar };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1504,
        -432
      ],
      "id": "fef8253b-96a2-49e1-8c4f-08376cc9a42d",
      "name": "Code in JavaScript1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.text }}",
                    "rightValue": "pago en efectivo",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "43bcbf51-f708-4b1f-b102-818474da3882"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "efectivo"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2a010362-d485-4eb0-aa1a-159b06dc0b94",
                    "leftValue": "={{ $json.text }}",
                    "rightValue": "pago electronico",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "electronico"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "No existe pago"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        864,
        -432
      ],
      "id": "9d6d9847-6f5c-40f1-ad5c-d7bcfd7fb5d0",
      "name": "Switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2e1ab4f4-5423-4a41-b102-4c142afe31c5",
              "name": "metododepago",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1280,
        -432
      ],
      "id": "18f2e06c-7f9e-4690-908d-6b5c4949ea6d",
      "name": "Edit Fields"
    }
  ],
  "pinData": {},
  "connections": {
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "ProductoEnVenta": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          },
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Send a text message to client",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message to client": {
      "main": [
        []
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript1": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message": {
      "main": [
        []
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Code in JavaScript1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "4d124872-16cb-4afd-bd27-8042404fddda",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "11c402fa63958c18fa56f282e76c8a61862c1a058727565fdce6fd1018e0cd7b"
  },
  "id": "F2KwkBdHamtUq9qP",
  "tags": []
}